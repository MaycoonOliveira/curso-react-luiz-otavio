
Curso de React.Js e Next.Js (nível intermediário e avançado)
Aprenda ReactJS, NextJS, Styled-Components, Testes com Jest , Storybook, Strapi, HTML e CSS com TypeScript e JavaScript.
Luiz Otávio Miranda


- npm run start  -- rodar o projeto
- Componentes funcionais e componentes de classe
- State com arrays e objetos
- O React trabalha com o JSX

- SPA: 
    Single Page Application (SPA) é uma aplicação web que funciona em uma única página, permitindo que o usuário interaja com ela sem precisar recarregar a página. 
    Como funciona
    A SPA carrega uma única página HTML e atualiza dinamicamente o conteúdo 
    O código HTML, JavaScript e CSS é obtido com um único carregamento de página 
    Quando o usuário interage com a aplicação, o conteúdo específico é atualizado, sem recarregar toda a página 
    Vantagens 
    Melhora a experiência do usuário, dando a impressão de que é um sistema desktop
    Melhora o desempenho, pois carrega o sistema completo na primeira requisição
    Separa as partes do front-end e do back-end, facilitando a manutenção
    Aplicações de SPA
    O Gmail, Outlook, Netflix e Airbnb são exemplos de aplicações que utilizam a tecnologia SPA. 
    Como otimizar o desempenho
    O desempenho de uma SPA pode ser otimizado através de: 
    Lazy loading, que carrega recursos apenas quando necessário
    Minimização de requisições ao servidor
    Uso de cache, que armazena dados localmente para acesso mais rápido

-REGRA: Sempre quando vermos map no React, lembra de colocar uma chave (key) no primeiro elemento retornando desse map:
      {posts.map(post => <h1 key={post.id}>{post.title}</h1>)}
      E para retornar mais elementos:

- JSX - JSX (JavaScript XML)
    JSX (JavaScript XML) é uma extensão da linguagem JavaScript que permite escrever código semelhante ao HTML dentro de um arquivo JavaScript. 
    O JSX é utilizado no React, uma biblioteca JavaScript, para criar interfaces de usuário. 
    Como funciona?
    O JSX permite misturar código JavaScript com sintaxe HTML. 
    O JSX é mais próximo do JavaScript do que do HTML. 
    O JSX é compilado para JavaScript, tornando-o compreensível para o navegador. 
    Vantagens do JSX
    O JSX torna mais fácil escrever componentes de interface de usuário em um único arquivo de código. 
    O JSX é menos burocrático e mais intuitivo do que o JavaScript puro. 
    Como usar o JSX?
    Para especificar strings literais como atributos, use aspas. 
    Para incorporar uma expressão JavaScript em um atributo, use chaves. 
    Para converter o JSX em código JavaScript, use uma ferramenta como o Babel. 

- Hard code 
    Hard code é uma técnica de programação que consiste em codificar dados diretamente no código fonte de um programa. É também conhecida como codificação rígida. 
    O hard code é utilizado quando se deseja criar aplicativos personalizados e complexos, ou quando se precisa de total controle sobre o processo de desenvolvimento. 
    O hard code pode ser utilizado para codificar dados como: Constantes físicas, Números de versão, Elementos de texto estático. 
    Os dados codificados rigidamente são difíceis de modificar, pois só podem ser alterados editando o código-fonte e recompilando o programa. 
    Um exemplo de hard code é quando um programador codifica os dados de entrada de um programa, de modo que o programa só possa executar a tarefa com esses dados específicos. 
    
- Data path:
    pode referir-se a um caminho de dados em um sistema, ou a uma classe do Microsoft Azure. 
    Data path em um sistema 
    Data path é a rota que os dados seguem dentro de um sistema, desde a origem até ao destino.
    Em computação, o data path envolve vários componentes, como processadores, memória e dispositivos de entrada e saída.
    O data path trabalha em conjunto para processar e transmitir dados de forma eficiente.
    DataPath no Microsoft Azure 
    DataPath é uma classe do Microsoft Azure que representa um caminho para os dados em um repositório de armazenamento.
    O caminho representado pelo objeto DataPath pode apontar para um diretório ou um artefato de dados (blob, arquivo).
    O DataPath pode ser modificado durante o envio do pipeline com PipelineParameter.

-  componentDidMount 
    - Método do React que serve para buscar dados. Quando precisamos buscar os dados de alguma API
    Esse método é utilizado para quando meu componente for montado na tela, eu quero que alguma coisa ocorra.
    É é utilizado esse método de ciclo de vida ou Lifecycle methods

- componentDidUpdate()
    https://pt-br.legacy.reactjs.org/docs/react-component.html#componentdidmount
    componentDidUpdate(prevProps, prevState, snapshot)
    componentDidUpdate() é invocado imediatamente após alguma atualização ocorrer. Este método não é chamado pelo initial render.

    Use isto como uma oportunidade para alterar o DOM quando o componente for atualizado. Este também é um bom lugar para realizar requisições de rede enquanto compara as props atuais com as props anteriores (e.g. uma chamada de rede pode não ser necessária se as props não mudaram).

    componentDidUpdate(prevProps) {
        // Uso típico, (não esqueça de comparar as props):
        if (this.props.userID !== prevProps.userID) {
        this.fetchData(this.props.userID);
        }
    }

- https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/
- https://jsonplaceholder.typicode.com/
- https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API

- Whats is a component react ? (Oque é um component react ?)
    Um componente react é uma classe que tem um método render que retorna jsx ou uma função que retorna jsx.

- {!!searchValue}  // if searchValue is not empty, show the message / converte o valor para boleeno true ou false
- posts.title.toLowerCase() - convertendo o valor que está sendo digitado para minúsculo

- IMPORTANTE: Vantagens para quebrar em componentes para facilitar na hora de escrever os testes

- Eventos sintéticos (SyntheticEvent): https://pt-br.legacy.reactjs.org/docs/events.html